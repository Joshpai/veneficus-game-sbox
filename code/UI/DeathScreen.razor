@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent

<root>
	<div class="title">You Died</div>
	@if (SurvivedWaves != -1)
	{
		<div class="subtitle">
			You lasted <p>@SurvivedWaves</p> waves and killed
			<p>@EnemiesKilled</p> enemies!
		</div>
	}
	<button @onclick=@(() => Respawn())>Respawn</button>
	<button class="main-menu" @onclick=@(() => GoToMainMenu())>
		&larr; Return to Main Menu
	</button>
</root>

@code
{
	[Property]
	public SceneFile MainMenu { get; set; }

	[Property]
	public string DeathReason { get; set; } = "";

	[Property]
	public float? TimeScale { get; set; } = null;

	[Property]
	public HealthComponent PlayerHealthComponent { get; set; } = null;

	[Property]
	public int SurvivedWaves { get; set; } = -1;

	[Property]
	public int EnemiesKilled { get; set; } = 0;

	void GoToMainMenu()
	{
		LevelManagerStaticStore.IsLoading = false;
		Scene.TimeScale = (TimeScale != null) ? TimeScale.Value : 1.0f;
		if (MainMenu != null)
			LevelManager.LoadLevelImmediate(MainMenu, true, false);
		GameObject.Destroy();
	}

	void Respawn()
	{
		if (PlayerHealthComponent != null)
			PlayerHealthComponent.InRespawn = false;
		// Log.Info("Respawn");
		LevelManagerStaticStore.IsLoading = false;
		Scene.TimeScale = (TimeScale != null) ? TimeScale.Value : 1.0f;
		GameObject.Destroy();
	}

	/// <summary>
	/// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
	/// </summary>
	protected override int BuildHash() =>
		System.HashCode.Combine(
			DeathReason,
			TimeScale,
			EnemiesKilled,
			SurvivedWaves
		);
}
